.target_test_template:
  image: "$CI_DOCKER_REGISTRY/target-test-env-v5.4:1"
  stage: target_test
  interruptible: true
  timeout: 1 hour
  parallel:
    matrix:
      - IDF_VERSION_TAG: ['v5.3', 'v5.4']
  variables:
    GIT_DEPTH: 1
    SUBMODULES_TO_FETCH: "none"
    IDF_TAG_FLAG: "true"
    TEST_FW_PATH: "$CI_PROJECT_DIR/tools/tiny-test-fw"
    LOG_PATH: "$CI_PROJECT_DIR/TEST_LOGS"
    ENV_FILE: "${BASE_FRAMEWORK_PATH}/ci-test-runner-configs/$CI_RUNNER_DESCRIPTION/EnvConfig.yml"
  before_script:
    - source ${CI_PROJECT_DIR}/tools/ci/utils.sh
    - check_idf_version $IDF_VERSION_TAG
    - export PYTHONPATH="$BASE_FRAMEWORK_PATH/tools:$BASE_FRAMEWORK_PATH/tools/ci/python_packages:$PYTHONPATH"
    - export PYTHONPATH="$CI_PROJECT_DIR/tools:$PYTHONPATH"
  cache:
    # Usually do not need submodule-cache in target_test
    - key: pip-cache
      paths:
        - .cache/pip
      policy: pull
  artifacts:
    when: always
    paths:
      - XUNIT_RESULT.xml
      - "**/*.log"
      - $LOG_PATH
      - "$CI_PROJECT_DIR/**/output.wav"
    reports:
      junit: XUNIT_RESULT.xml
    expire_in: 1 week
  retry: 2

.pytest_template:
  extends:
    - .target_test_template
  script:
    - pip install pytest pytest-embedded-idf pytest-embedded-serial-esp pytest-rerunfailures pytest-timeout
    - pytest ${TEST_DIR} --target ${IDF_TARGET} -m "${tags}" --junitxml=XUNIT_RESULT.xml --parallel-count 1 --parallel-index 1

.pytest_audio_loopback_template:
  image: "$CI_DOCKER_IMAGE_REGISTRY/target_test_env_v5.3:2"
  extends:
    - .rules:build:enable-gmf-example-test
    - .target_test_template
  script:
    - export PYTHONPATH="/usr/local/lib/python3.9/dist-packages:$PYTHONPATH"
    - pip install pytest pytest-embedded-idf pytest-embedded-serial-esp pytest-rerunfailures pytest-timeout
    - arecord -l
    - pytest ${TEST_DIR} --target ${IDF_TARGET} -m "${tags}" --junitxml=XUNIT_RESULT.xml --parallel-count 1 --parallel-index 1
  variables:
    TEST_DIR: "${EXAMPLES_PATH}"

.pytest_examples_dir_template:
  extends:
    - .rules:build:enable-gmf-example-test
    - .pytest_template
  variables:
    TEST_DIR: "${EXAMPLES_PATH}"

audio_playback_test_esp32:
  extends:
    - .pytest_audio_loopback_template
  variables:
    IDF_TARGET: esp32
  needs:
    - 'build_examples_esp32_lyrat_mini_v1_1: [v5.3, 1/1]'
    - 'build_examples_esp32_lyrat_mini_v1_1: [v5.4, 1/1]'
  tags: [ esp32, AUDIO_LOOPBACK_ENV ]

example_test_esp32s3:
  extends:
    - .pytest_examples_dir_template
  variables:
    IDF_TARGET: esp32s3
  needs:
    - 'build_examples_esp32s3_korvo_v2: [v5.3, 1/1]'
    - 'build_examples_esp32s3_korvo_v2: [v5.4, 1/1]'
  tags: [ esp32s3 ]
